---

- name: "Prepare"
  block:
    - name: "Prepare for service update!"
      tags: [ "vagrant", "prepare" ]
      include_task: prepare.yml
    - name: "Variable configuration."
      tags: [ "vagrant", "variables" ]
      include_task: variables.yml
  rescue:
    - debug: msg='I caught an error'
    - name: i force a failure in middle of recovery! >:-)
      command: /bin/false
    - debug: msg='I also never execute :-('
  always:
    - debug: msg="This always executes"

- name: "Build"
  block:
    - name: "Uninstall Vagrant"
      tags: [ "vagrant", "uninstall" ]
      include_tasks: uninstall.yml
      when: state|default('present') == "absent"
    - debug: msg='Vagrant removed successfully.'

    - name: "Setup/install Vagrant."
      tags: [ "vagrant", "install" , "redhat"]
      include_tasks: install-rhel.yml
      when: ansible_os_family == 'RedHat' and state|default('present') == "present"

    - name: "Setup/install Vagrant."
      tags: [ "vagrant", "install" , "debian"]
      include_tasks: install-debian.yml
      when: ansible_os_family == 'Debian' and state|default('present') == "present"

    - name: "Setup/install Vagrant."
      tags: [ "vagrant", "install", "archlinux" ]
      include_tasks: install-archlinux.yml
      when: ansible_os_family == 'Archlinux' and state|default('present') == "present"
  rescue:
    - debug: msg='I caught an error'
  always:
    - name: "Check if Vagrant packages were installed"
      tags: [ "vagrant", "install", "{{ ansible_os_family | lower }}" ]
      set_fact:
        install_packages: "{{
          (rhel.install_packages is defined and rhel.install_packages.changed)
          or (debian.install_packages is defined and debian.install_packages.changed)
          or (archlinux.install_packages is defined and archlinux.install_packages.changed)
        }}"


- name: "Installing Linux packages"
  tags: [ "vagrant", "install", "{{ ansible_os_family | lower }}" ]
  when: state|default('present') == "present"
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ install_packages }}"

- name: "Installing Python modules"
  tags: [ "vagrant", "install", "{{ ansible_os_family | lower }}", "python" ]
  when: state|default('present') == "present"
  pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ python_modules }}"

- name: "Create users"
  include_tasks: users.yml
  when: state|default('present') == "present"
  tags: [ "vagrant", "{{ ansible_os_family | lower }}", "users" ]

- name: "Configure Vagrant"
  include_tasks: configure.yml
  when: state|default('present') == "present"
  tags: [ "vagrant", "{{ ansible_os_family | lower }}", "configure" ]


- name: "Installing Vagrant plugins for Vagrant"
  include_tasks: setup-plugins.yml
  when: state|default('present') == "present"
  tags: [ "vagrant", "install", "plugins" ]


- name: "Load vhost kernel module"
  when: state|default('present') == "present"
  tags: [ "vagrant" ]
  become: yes
  modprobe:
    name: vhost_net
    state: present

- name: "Ensure ntpd is up-to-date."
  when: state|default('present') == "present"
  tags: [ "vagrant" ]
  package:
    name: ntp
    state: present
  notify:
    - ntpd

- name: "Install Vagrant"
  when: state|default('present') == "present"
  tags: [ "vagrant" ]
  package:
    name: vagrant
    state: present
  notify:
    - vagrant

- name: "Create a directory if it does not exist"
  when: state|default('present') == "present"
  tags: [ "vagrant" ]
  file:
    path: boxes
    state: directory
    mode: '0755'

- name: "Start Vagrant"
  command: vagrant up
